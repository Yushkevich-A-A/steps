{"version":3,"sources":["components/Steps/StepModel/StepModel.js","components/Steps/ResultList/Step/Step.js","components/Steps/ResultList/ResultList.js","components/Steps/Form/Form.js","components/Steps/Steps.js","App.js","reportWebVitals.js","index.js"],"names":["StepModel","id","date","distance","this","Step","props","step","handleRemove","onRemove","handleEdit","onEdit","className","onClick","ResultList","list","map","Form","form","handleSubmit","onAdd","handleInputValue","onEditForm","onSubmit","htmlFor","type","name","onChange","value","required","Steps","useState","steps","setSteps","nanoid","setForm","event","target","prevForm","preventDefault","newStepsArr","filter","item","currentStep","find","sumDistance","parseFloat","sort","a","b","compareDesc","parse","Date","handleAdd","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eee8b2a.chunk.js","sourcesContent":["class StepModel {\r\n    constructor(id, date, distance) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.distance = distance;\r\n    }\r\n}\r\n\r\nexport default StepModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StepModel from '../../StepModel/StepModel';\r\n\r\nimport './Step.css';\r\n\r\nfunction Step(props) {\r\n    const { step, onRemove: handleRemove, onEdit: handleEdit } = props;\r\n\r\n    return (\r\n        <li className='step'>\r\n            <div className=\"step-data tiem-date\">{step.date}</div>\r\n            <div className=\"step-data step-distance\">{step.distance}</div>\r\n            <div className=\"step-data step-actions\">\r\n                <button className='step-action step-action-edit'\r\n                onClick={() => handleEdit(step.id)}\r\n                ></button>\r\n                <button className='step-action step-action-delete' \r\n                onClick={() => handleRemove(step.id)}\r\n                ></button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nStep.propTypes = {\r\n    step: PropTypes.instanceOf(StepModel).isRequired,\r\n    onRemove: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Step;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ResultList.css';\r\nimport Step from './Step/Step';\r\n\r\nfunction ResultList(props) {\r\n    const { list, onRemove: handleRemove, onEdit: handleEdit } = props;\r\n\r\n    return (\r\n        <div className='result-container'>\r\n            <ul className='result-header'>\r\n                <li className='result-header-data'>Дата(ДД.ММ.ГГ)</li>\r\n                <li className='result-header-data'>Пройдено км</li>\r\n                <li className='result-header-data'>Действия</li>\r\n            </ul>\r\n            <ul className=\"result-list\">\r\n                {\r\n                    list.map( step => <Step key={step.id} step={step} onRemove={handleRemove} onEdit={handleEdit}/>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nResultList.propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n    onRemove: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ResultList;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Form.css';\r\n\r\nfunction Form(props) {\r\n    const { form, onAdd: handleSubmit, onEditForm: handleInputValue } = props;\r\n\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <div className=\"form-date\">\r\n                <label htmlFor=\"form-date\" className=\"form-label form-date-label\">\r\n                    Дата(ДД.ММ.ГГ)\r\n                </label>\r\n                <input type=\"text\" id='form-date' name='date' className=\"form-input form-date-input\" onChange={handleInputValue} value={form.date} required/>\r\n            </div>\r\n            <div className=\"form-value\">\r\n                <label htmlFor=\"form-value\" className=\"form-label form-value-label\">\r\n                    Пройдено км\r\n                </label>\r\n                <input type=\"text\" id='form-value' name='distance' className=\"form-input form-value-label\" onChange={handleInputValue} value={form.distance} required/>\r\n            </div>\r\n            <button className='form-button'>OK</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    form: PropTypes.object.isRequired,\r\n    onAdd: PropTypes.func.isRequired,\r\n    onEditForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n\r\n","import React, {useState} from 'react';\r\nimport { compareDesc, parse  } from 'date-fns'\r\nimport { nanoid } from 'nanoid';\r\nimport ResultList from './ResultList/ResultList';\r\nimport Form from './Form/Form';\r\nimport StepModel from './StepModel/StepModel';\r\nimport './Steps.css';\r\n\r\nfunction Steps() {\r\n    const [ steps, setSteps ] = useState([]);\r\n    const [ form, setForm ] = useState({id: nanoid(), date: '', distance: ''});\r\n\r\n    const handleAdd = (step) => {\r\n        const newStepsArr = steps.filter( item => item.id !== step.id); \r\n        const currentStep = newStepsArr.find( item => item.date === step.date );\r\n\r\n        if (currentStep) {\r\n            const sumDistance = parseFloat(step.distance) + parseFloat(currentStep.distance);\r\n            setSteps(newStepsArr.map( item => (item.id === currentStep.id) ?\r\n                                new StepModel(currentStep.id, currentStep.date, sumDistance) :\r\n                                item));\r\n        } else {\r\n            setSteps([...newStepsArr,new StepModel(step.id, step.date, step.distance) ].sort((a, b) => compareDesc(\r\n                parse(a.date, 'dd.MM.yyyy', new Date()),\r\n                parse(b.date, 'dd.MM.yyyy', new Date())\r\n                )));\r\n        }\r\n        setForm({id: nanoid(), date: '', distance: ''});\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        setSteps(steps => steps.filter( item => item.id !== id) )\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        setForm({...steps.find( item => item.id === id)});\r\n    }\r\n\r\n    const handleInputValue = event => {\r\n        const { name,value } = event.target;\r\n        setForm( prevForm => ({ ...prevForm, [name]: value}) );\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        handleAdd(form);\r\n    }\r\n\r\n    return (\r\n        <div className='steps-container'>\r\n            <Form form={form} onEditForm={handleInputValue} onAdd={handleSubmit}/>\r\n            <ResultList list={steps} onRemove={handleRemove} onEdit={handleEdit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps;","import './App.css';\nimport Steps from './components/Steps/Steps';\n\nfunction App() {\n  return (\n    <div className=\"App app-wrapper\">\n      <Steps/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}